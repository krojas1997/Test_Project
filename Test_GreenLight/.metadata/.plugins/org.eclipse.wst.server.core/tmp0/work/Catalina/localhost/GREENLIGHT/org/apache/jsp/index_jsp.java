/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-10-31 07:19:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
      utils.MysqlDBConexion cx = null;
      cx = (utils.MysqlDBConexion) _jspx_page_context.getAttribute("cx", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cx == null){
        cx = new utils.MysqlDBConexion();
        _jspx_page_context.setAttribute("cx", cx, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

response.setHeader("Cache-Control","no-cache");
response.setHeader("Cache-Control","no-store");
response.setDateHeader("Expires", 0);

String usuario="";
String  mail="";
int tipo=-1;


HttpSession sesion=request.getSession(true);

if(sesion.getAttribute("usuario")!=null){
	usuario=(String)sesion.getAttribute("usuario");
	mail=(String)sesion.getAttribute("mail");
	tipo=(int)sesion.getAttribute("tipo");
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>Biblioteca Virtual</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap -->\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\r\n");
      out.write("\t<link href=\"css/animate.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"css/prettyPhoto.css\" rel=\"stylesheet\">      \r\n");
      out.write("\t<link href=\"css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"css/responsive.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("ul#menu {\r\n");
      out.write(" background: #333;\r\n");
      out.write(" width: 940px;\r\n");
      out.write(" float:left;\r\n");
      out.write(" padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu li {\r\n");
      out.write(" color: #fff;\r\n");
      out.write(" float: left;\r\n");
      out.write(" list-style: none;\r\n");
      out.write(" margin: 0% 5%;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu li:hover{\r\n");
      out.write(" color: #aaa073;\r\n");
      out.write(" cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu ul {\r\n");
      out.write(" display: none;\r\n");
      out.write(" position: absolute;\r\n");
      out.write(" top: 49px;\r\n");
      out.write(" background: #333;\r\n");
      out.write(" color: #fff;\r\n");
      out.write(" padding: 5px 0px 5px 5px;\r\n");
      out.write(" margin: 0;\r\n");
      out.write(" }\r\n");
      out.write("  \r\n");
      out.write("ul#menu ul li{\r\n");
      out.write(" float: left;\r\n");
      out.write(" color: #fff;\r\n");
      out.write(" width:100%;\r\n");
      out.write(" margin:2% 0%;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("ul#menu ul li a{\r\n");
      out.write(" color: #fff;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu ul li a:hover{\r\n");
      out.write(" color: #aaa073;\r\n");
      out.write(" cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu li:hover ul ul,ul#menu li:hover ul ul ul,ul#menu li.iehover ul ul,ul#menu li.iehover ul ul ul {\r\n");
      out.write(" display: none;\r\n");
      out.write(" cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("ul#menu li:hover ul,ul#menu ul li:hover ul,ul#menu ul ul li:hover ul,ul#menu li.iehover ul,ul#menu ul li.iehover ul,ul#menu ul ul li.iehover ul {\r\n");
      out.write(" display: block;\r\n");
      out.write(" cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("    <!-- =======================================================\r\n");
      out.write("        Theme Name: Gp\r\n");
      out.write("        Theme URL: https://bootstrapmade.com/gp-free-multipurpose-html-bootstrap-templat/\r\n");
      out.write("        Author: BootstrapMade\r\n");
      out.write("        Author URL: https://bootstrapmade.com\r\n");
      out.write("    ======================================================= -->  \r\n");
      out.write("    \r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Menu -->\t\t\r\n");
      out.write("\t<header id=\"header\">\r\n");
      out.write("\t\r\n");
      out.write("        <nav class=\"navbar navbar-fixed-top\" role=\"banner\">\r\n");
      out.write("        \r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">Green Light1</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("      <li class=\"active\"><a href=\"#\">Inicio</a></li>\r\n");
      out.write("     \r\n");
      out.write("         \r\n");
      out.write("     ");
if(sesion.getAttribute("usuario")!=null) { 
      out.write("\r\n");
      out.write("     <li><a>");
      out.print(usuario );
      out.write("</a></li>\r\n");
      out.write("      <li class=\"active\"><a href=\"ServletLogin?tipo=logOut\">Cerrar Seccion</a></li>\r\n");
      out.write("     ");
}else{ 
      out.write("\r\n");
      out.write(" \t\t<li class=\"dropdown\">\r\n");
      out.write("        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Iniciar Seccion\r\n");
      out.write("        <span class=\"caret\"></span></a>\r\n");
      out.write("        <ul class=\"dropdown-menu\">\r\n");
      out.write("          <li><a href=\"Login.jsp\">Paciente</a></li>\r\n");
      out.write("          <li><a href=\"Login.jsp\">Medico</a></li>\r\n");
      out.write("               <li><a href=\"Login.jsp\">Administrador</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("    <script src=\"js/jquery.js\"></script>\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.prettyPhoto.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.isotope.min.js\"></script>   \r\n");
      out.write("    <script src=\"js/wow.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/main.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
